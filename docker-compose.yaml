version: "3.3"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - mnet
      
  kafka:
    image: wurstmeister/kafka   
    container_name: kafka
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_PORT: 9092
      KAFKA_CREATE_TOPICS: "gpsstream:3:1,logstream:3:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    networks:
      - mnet
    
  mongodb:      
    build: ./mongodb
    image: mongodb
    container_name: mongodb    
    volumes:
      - ~/volumes/socnetdb/mongo/data:/data/db
      - ~/volumes/socnetdb/mongo/logs:/data/logs
    ports:
      - 27017:27017
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=DonDev
      - MONGO_INITDB_ROOT_PASSWORD=BC2022     
    command: mongod
    networks:
      mnet:
        aliases:
          - mongodb
 
     
  account:
    image: account     
    build: ./account
    container_name: account 
    links:
      - mongodb
      - kafka
    ports:
      - 9091:9091
    depends_on:     
      - mongodb
      - kafka
    deploy:
      replicas: 1
    networks:
     - mnet     
        
  user:
    image: user     
    build: ./user
    container_name: user   
    links:
      - mongodb
      - kafka
    ports:
      - 9093:9093
    depends_on:     
      - mongodb
      - kafka
    deploy:
      replicas: 1
    networks:
     - mnet
  
networks:
  mnet:
    driver: bridge
